// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'order_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

OrderModel _$OrderModelFromJson(Map<String, dynamic> json) => OrderModel(
      orderId: json['orderId'] as String?,
      allocId: json['allocId'] as String?,
      inOutSctn: json['inOutSctn'] as String?,
      inOutSctnName: json['inOutSctnName'] as String?,
      truckTypeCode: json['truckTypeCode'] as String?,
      truckTypeName: json['truckTypeName'] as String?,
      sComName: json['sComName'] as String?,
      sSido: json['sSido'] as String?,
      sGungu: json['sGungu'] as String?,
      sDong: json['sDong'] as String?,
      sAddr: json['sAddr'] as String?,
      sAddrDetail: json['sAddrDetail'] as String?,
      sDate: json['sDate'] as String?,
      sStaff: json['sStaff'] as String?,
      sTel: json['sTel'] as String?,
      sMemo: json['sMemo'] as String?,
      eComName: json['eComName'] as String?,
      eSido: json['eSido'] as String?,
      eGungu: json['eGungu'] as String?,
      eDong: json['eDong'] as String?,
      eAddr: json['eAddr'] as String?,
      eAddrDetail: json['eAddrDetail'] as String?,
      eDate: json['eDate'] as String?,
      eStaff: json['eStaff'] as String?,
      eTel: json['eTel'] as String?,
      eMemo: json['eMemo'] as String?,
      sLat: (json['sLat'] as num?)?.toDouble(),
      sLon: (json['sLon'] as num?)?.toDouble(),
      eLat: (json['eLat'] as num?)?.toDouble(),
      eLon: (json['eLon'] as num?)?.toDouble(),
      goodsName: json['goodsName'] as String?,
      goodsWeight: json['goodsWeight'] as String?,
      weightUnitCode: json['weightUnitCode'] as String?,
      goodsQty: json['goodsQty'] as String?,
      qtyUnitCode: json['qtyUnitCode'] as String?,
      sWayCode: json['sWayCode'] as String?,
      eWayCode: json['eWayCode'] as String?,
      mixYn: json['mixYn'] as String?,
      mixSize: json['mixSize'] as String?,
      returnYn: json['returnYn'] as String?,
      carTonCode: json['carTonCode'] as String?,
      carTypeCode: json['carTypeCode'] as String?,
      chargeType: json['chargeType'] as String?,
      distance: (json['distance'] as num?)?.toDouble(),
      time: json['time'] as int?,
      driverMemo: json['driverMemo'] as String?,
      itemCode: json['itemCode'] as String?,
      itemName: json['itemName'] as String?,
      stopCount: json['stopCount'] as int?,
      qtyUnitName: json['qtyUnitName'] as String?,
      sWayName: json['sWayName'] as String?,
      eWayName: json['eWayName'] as String?,
      chargeTypeName: json['chargeTypeName'] as String?,
      carTypeName: json['carTypeName'] as String?,
      carTonName: json['carTonName'] as String?,
      sellCustId: json['sellCustId'] as String?,
      sellDeptId: json['sellDeptId'] as String?,
      sellStaff: json['sellStaff'] as String?,
      sellStaffTel: json['sellStaffTel'] as String?,
      sellCustName: json['sellCustName'] as String?,
      sellDeptName: json['sellDeptName'] as String?,
      sellCharge: json['sellCharge'] as String?,
      sellFee: json['sellFee'] as String?,
      allocState: json['allocState'] as String?,
      allocStateName: json['allocStateName'] as String?,
      allocDate: json['allocDate'] as String?,
      startDate: json['startDate'] as String?,
      finishDate: json['finishDate'] as String?,
      enterDate: json['enterDate'] as String?,
      receiptYn: json['receiptYn'] as String?,
      receiptDate: json['receiptDate'] as String?,
      receiptPath: json['receiptPath'] as String?,
      paperReceiptDate: json['paperReceiptDate'] as String?,
      invId: json['invId'] as String?,
      taxinvYn: json['taxinvYn'] as String?,
      taxinvDate: json['taxinvDate'] as String?,
      loadStatus: json['loadStatus'] as String?,
      payType: json['payType'] as String?,
      reqPayYN: json['reqPayYN'] as String?,
      reqPayDate: json['reqPayDate'] as String?,
      payDate: json['payDate'] as String?,
      payAmt: json['payAmt'] as String?,
      reqPayFee: (json['reqPayFee'] as num?)?.toDouble(),
      finishYn: json['finishYn'] as String?,
      autoCarTimeYn: json['autoCarTimeYn'] as String?,
    );

Map<String, dynamic> _$OrderModelToJson(OrderModel instance) =>
    <String, dynamic>{
      'orderId': instance.orderId,
      'allocId': instance.allocId,
      'inOutSctn': instance.inOutSctn,
      'inOutSctnName': instance.inOutSctnName,
      'truckTypeCode': instance.truckTypeCode,
      'truckTypeName': instance.truckTypeName,
      'sComName': instance.sComName,
      'sSido': instance.sSido,
      'sGungu': instance.sGungu,
      'sDong': instance.sDong,
      'sAddr': instance.sAddr,
      'sAddrDetail': instance.sAddrDetail,
      'sDate': instance.sDate,
      'sStaff': instance.sStaff,
      'sTel': instance.sTel,
      'sMemo': instance.sMemo,
      'eComName': instance.eComName,
      'eSido': instance.eSido,
      'eGungu': instance.eGungu,
      'eDong': instance.eDong,
      'eAddr': instance.eAddr,
      'eAddrDetail': instance.eAddrDetail,
      'eDate': instance.eDate,
      'eStaff': instance.eStaff,
      'eTel': instance.eTel,
      'eMemo': instance.eMemo,
      'sLat': instance.sLat,
      'sLon': instance.sLon,
      'eLat': instance.eLat,
      'eLon': instance.eLon,
      'goodsName': instance.goodsName,
      'goodsWeight': instance.goodsWeight,
      'weightUnitCode': instance.weightUnitCode,
      'goodsQty': instance.goodsQty,
      'qtyUnitCode': instance.qtyUnitCode,
      'sWayCode': instance.sWayCode,
      'eWayCode': instance.eWayCode,
      'mixYn': instance.mixYn,
      'mixSize': instance.mixSize,
      'returnYn': instance.returnYn,
      'carTonCode': instance.carTonCode,
      'carTypeCode': instance.carTypeCode,
      'chargeType': instance.chargeType,
      'distance': instance.distance,
      'time': instance.time,
      'driverMemo': instance.driverMemo,
      'itemCode': instance.itemCode,
      'itemName': instance.itemName,
      'stopCount': instance.stopCount,
      'qtyUnitName': instance.qtyUnitName,
      'sWayName': instance.sWayName,
      'eWayName': instance.eWayName,
      'chargeTypeName': instance.chargeTypeName,
      'carTypeName': instance.carTypeName,
      'carTonName': instance.carTonName,
      'sellCustId': instance.sellCustId,
      'sellDeptId': instance.sellDeptId,
      'sellStaff': instance.sellStaff,
      'sellStaffTel': instance.sellStaffTel,
      'sellCustName': instance.sellCustName,
      'sellDeptName': instance.sellDeptName,
      'sellCharge': instance.sellCharge,
      'sellFee': instance.sellFee,
      'allocState': instance.allocState,
      'allocStateName': instance.allocStateName,
      'allocDate': instance.allocDate,
      'startDate': instance.startDate,
      'finishDate': instance.finishDate,
      'enterDate': instance.enterDate,
      'receiptYn': instance.receiptYn,
      'receiptDate': instance.receiptDate,
      'receiptPath': instance.receiptPath,
      'paperReceiptDate': instance.paperReceiptDate,
      'invId': instance.invId,
      'taxinvYn': instance.taxinvYn,
      'taxinvDate': instance.taxinvDate,
      'loadStatus': instance.loadStatus,
      'payType': instance.payType,
      'reqPayYN': instance.reqPayYN,
      'reqPayDate': instance.reqPayDate,
      'payDate': instance.payDate,
      'payAmt': instance.payAmt,
      'reqPayFee': instance.reqPayFee,
      'finishYn': instance.finishYn,
      'autoCarTimeYn': instance.autoCarTimeYn,
    };
